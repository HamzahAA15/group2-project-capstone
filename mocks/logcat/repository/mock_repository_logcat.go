// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock_logcatRepository is a generated GoMock package.
package mock_logcatRepository

import (
	reflect "reflect"
	logcatEntities "sirclo/project-capstone/entities/logcatEntities"

	gomock "github.com/golang/mock/gomock"
)

// MockLogcatRepoInterface is a mock of LogcatRepoInterface interface.
type MockLogcatRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockLogcatRepoInterfaceMockRecorder
}

// MockLogcatRepoInterfaceMockRecorder is the mock recorder for MockLogcatRepoInterface.
type MockLogcatRepoInterfaceMockRecorder struct {
	mock *MockLogcatRepoInterface
}

// NewMockLogcatRepoInterface creates a new mock instance.
func NewMockLogcatRepoInterface(ctrl *gomock.Controller) *MockLogcatRepoInterface {
	mock := &MockLogcatRepoInterface{ctrl: ctrl}
	mock.recorder = &MockLogcatRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLogcatRepoInterface) EXPECT() *MockLogcatRepoInterfaceMockRecorder {
	return m.recorder
}

// CreateLogcat mocks base method.
func (m *MockLogcatRepoInterface) CreateLogcat(lc logcatEntities.Logcat) (logcatEntities.Logcat, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLogcat", lc)
	ret0, _ := ret[0].(logcatEntities.Logcat)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateLogcat indicates an expected call of CreateLogcat.
func (mr *MockLogcatRepoInterfaceMockRecorder) CreateLogcat(lc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLogcat", reflect.TypeOf((*MockLogcatRepoInterface)(nil).CreateLogcat), lc)
}

// GetLogcatUser mocks base method.
func (m *MockLogcatRepoInterface) GetLogcatUser(userID string) ([]logcatEntities.Logcat, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLogcatUser", userID)
	ret0, _ := ret[0].([]logcatEntities.Logcat)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLogcatUser indicates an expected call of GetLogcatUser.
func (mr *MockLogcatRepoInterfaceMockRecorder) GetLogcatUser(userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLogcatUser", reflect.TypeOf((*MockLogcatRepoInterface)(nil).GetLogcatUser), userID)
}

// GetLogcats mocks base method.
func (m *MockLogcatRepoInterface) GetLogcats() ([]logcatEntities.Logcat, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLogcats")
	ret0, _ := ret[0].([]logcatEntities.Logcat)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLogcats indicates an expected call of GetLogcats.
func (mr *MockLogcatRepoInterfaceMockRecorder) GetLogcats() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLogcats", reflect.TypeOf((*MockLogcatRepoInterface)(nil).GetLogcats))
}
