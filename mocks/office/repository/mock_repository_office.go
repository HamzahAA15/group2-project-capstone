// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock_officeRepository is a generated GoMock package.
package mock_officeRepository

import (
	reflect "reflect"
	officeEntities "sirclo/project-capstone/entities/officeEntities"

	gomock "github.com/golang/mock/gomock"
)

// MockOfficeRepoInterface is a mock of OfficeRepoInterface interface.
type MockOfficeRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOfficeRepoInterfaceMockRecorder
}

// MockOfficeRepoInterfaceMockRecorder is the mock recorder for MockOfficeRepoInterface.
type MockOfficeRepoInterfaceMockRecorder struct {
	mock *MockOfficeRepoInterface
}

// NewMockOfficeRepoInterface creates a new mock instance.
func NewMockOfficeRepoInterface(ctrl *gomock.Controller) *MockOfficeRepoInterface {
	mock := &MockOfficeRepoInterface{ctrl: ctrl}
	mock.recorder = &MockOfficeRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOfficeRepoInterface) EXPECT() *MockOfficeRepoInterfaceMockRecorder {
	return m.recorder
}

// GetOffices mocks base method.
func (m *MockOfficeRepoInterface) GetOffices() ([]officeEntities.Office, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOffices")
	ret0, _ := ret[0].([]officeEntities.Office)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOffices indicates an expected call of GetOffices.
func (mr *MockOfficeRepoInterfaceMockRecorder) GetOffices() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOffices", reflect.TypeOf((*MockOfficeRepoInterface)(nil).GetOffices))
}
