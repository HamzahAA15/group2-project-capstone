// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock_officeService is a generated GoMock package.
package mock_officeService

import (
	reflect "reflect"
	officeEntities "sirclo/project-capstone/entities/officeEntities"

	gomock "github.com/golang/mock/gomock"
)

// MockOfficeServiceInterface is a mock of OfficeServiceInterface interface.
type MockOfficeServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOfficeServiceInterfaceMockRecorder
}

// MockOfficeServiceInterfaceMockRecorder is the mock recorder for MockOfficeServiceInterface.
type MockOfficeServiceInterfaceMockRecorder struct {
	mock *MockOfficeServiceInterface
}

// NewMockOfficeServiceInterface creates a new mock instance.
func NewMockOfficeServiceInterface(ctrl *gomock.Controller) *MockOfficeServiceInterface {
	mock := &MockOfficeServiceInterface{ctrl: ctrl}
	mock.recorder = &MockOfficeServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOfficeServiceInterface) EXPECT() *MockOfficeServiceInterfaceMockRecorder {
	return m.recorder
}

// GetOffices mocks base method.
func (m *MockOfficeServiceInterface) GetOffices() ([]officeEntities.Office, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOffices")
	ret0, _ := ret[0].([]officeEntities.Office)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOffices indicates an expected call of GetOffices.
func (mr *MockOfficeServiceInterfaceMockRecorder) GetOffices() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOffices", reflect.TypeOf((*MockOfficeServiceInterface)(nil).GetOffices))
}
